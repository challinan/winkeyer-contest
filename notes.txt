N1MM Download Page - lots of great info:
https://n1mmwp.hamdocs.com/mmfiles/

CW Ops Roster:
https://docs.google.com/spreadsheets/d/1Ew8b1WAorFRCixGRsr031atxmS0SsycvmOczS_fDqzc

Database Notes

--**--
Database States:
a. doesn't exist on disk
b. File exists on disk, has no tables
c. File exists on disk, has a valid station table
d. File exists on disk, has multiple tables
--**--

Case 1:
    program starts up and finds no database

Case 2:
    program starts up and finds valid database

Case 3:
    User invokes Config dialog

Program Startup:

Case 1: no database
    create database
    Initialize station_data table

Case 2: database esits, tables empty
    Bring up config dialog, populate database

Case 3: database exits, station_data is populated with valid data
    Read db and populate local db data
    Continue bringup.

Program Startup Logic:
    1. does db file exist?
        1.a. if yes, does a row exist with valid Database
            1.b Read db and populate local db data
        1.c if no, Bring up config dialog, populate database
             * populate local db data

    2. no db file
        2.a create db file
        2.b Bring up config dialog, populate database

Common Tasks:
    1. Bring up config dialog, populate database
    2. Read db and populate local db data
---------------------------------------------------------

Current Startup Sequence:

    1. Setup UI - comes from mainwindow.ui FORM
    2. Instantiate Database object: Sqlite3_connector
        Connect signal to open config dialog
		
---------------------------------------------------------
Threads Notes
* Convert to Event driven
* investigate QChildEvent as a way to kick off actions
* QObject::thread() returns the thread in which the object lives
* QApplication::postEvent() posts an event for a certain object
* You cannot access a QObject from more than one thread at the same time!!
    *  This is likely the reason for the current crash
* you can't delete a QObject from another thread
	* Must use QObject::deleteLater() which will ultimately delete the obj in its own thread
* 
